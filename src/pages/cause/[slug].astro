---
import './_cause.scss';
import { type Org, orgs } from '../../data';
import { type Cause, causes } from '../../data';
import { Icon } from "astro-icon/components";
import Layout from '../../layouts/Layout.astro';
const { slug } = Astro.params;

export function getStaticPaths() {
  return [
    ...causes.map((cause) => ({
      params: {
        slug: cause.slug
      }
    }))
  ]
}

let allMatchedOrgs: Org[] = [];
const cause = causes.find((cause) => cause.slug === slug) as Cause;

orgs.map((org) => {
  org.cause.map((thisCause) => {
    if(thisCause === cause.slug) {
      allMatchedOrgs.push(org)
    }
  })
});

const globalOrgs: Org[] = allMatchedOrgs.filter((org) => org.scope === 'global');
const usOrgs: Org[] = allMatchedOrgs.filter((org) => org.scope === 'us');
---

<Layout 
title="Causes"
description='A list of causes that need your support.'
image=''
>
<header  class="max-w-6xl mx-auto" slot="header">
  <nav aria-label="Breadcrumb" class="flex breadcrumb">
    <ol class="flex mt-3 overflow-hidden rounded-lg border border-gray-200 text-gray-600">
      <li class="flex items-center justify-center">
        <a href="/" class="flex h-10 items-center gap-1.5 bg-gray-100 px-4 transition hover:text-gray-900">
          <svg
          xmlns="http://www.w3.org/2000/svg"
          class="size-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
          />
          </svg>
          <span class="ms-1.5 text-xs font-medium"> Home </span>
        </a>
      </li>          
      <li class="relative flex items-center">
        <span
          class="absolute inset-y-0 -start-px h-10 w-4 bg-gray-100 [clip-path:_polygon(0_0,_0%_100%,_100%_50%)] rtl:rotate-180"
        >
        </span>
        <a href="/causes" class="flex h-10 items-center bg-gray-100 pe-4 ps-8 text-xs font-medium transition hover:text-gray-900" aria-current="page">
          Causes
        </a>
      </li>
      <li class="relative flex items-center">
        <span
          class="absolute inset-y-0 -start-px h-10 w-4 bg-gray-100 [clip-path:_polygon(0_0,_0%_100%,_100%_50%)] rtl:rotate-180"
        >
        </span>
        <a href={`/cause/${cause.slug}`} class="flex h-10 items-center bg-white pe-4 ps-8 text-xs font-medium transition hover:text-gray-900" aria-current="page">
          Organizations
        </a>
      </li>
      <!-- <li><a href="/informed">Next Step</a></li> -->
    </ol>
  </nav>
</header>

<section class="max-w-3xl mx-auto py-6 lg:pt-8 px-4 pb-10">
  <h1 class="resist-select-org__title">Select an Organization</h1>
  {globalOrgs.length !== 0 && 
  <h2 class="resist-org__section-title">üåç Global Organizations</h2>
    <ul class="org-list">    
      {globalOrgs.map((thisOrg) => {
        return (
        <li>
          <a class="org-link" href={`/orgs/${thisOrg.slug}?cause=${cause.slug}`}>
          
            <p class="org-title">{thisOrg.name}</p>
            <p>{thisOrg.description}</p>
            {/* <p>Website: <a href={thisOrg.url} target="_blank">{thisOrg.url}</a></p> */}
          </a>
        </li>)
      })}
    </ul>
  }
  
  <h2 class="resist-org__section-title">üá∫üá∏ U.S. Focused</h2>
  <ul class="org-list">
    {usOrgs.map((thisOrg) => {
      return (
      <li>        
        <a class="org-link" href={`/orgs/${thisOrg.slug}?cause=${cause.slug}`}>        
          <p class="org-title">{thisOrg.name}</p>
          <p>{thisOrg.description}</p>          
        </a>        
      </li>)
    })}
  </ul>
</section>
</Layout>